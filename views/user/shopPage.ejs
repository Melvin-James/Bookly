<%- include("../partials/userHead") %>

<!-- Hero Section with Search -->
<section class="bg-gradient-to-br from-slate-50 to-teal-50 py-12">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto text-center">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Discover Your Next Great Read</h1>
      <p class="text-lg text-gray-600 mb-8">Explore our curated collection of books across all genres</p>
      
      <!-- Enhanced Search Bar -->
      <form action="/user/shop" method="GET" class="relative max-w-2xl mx-auto">
        <div class="relative">
          <input 
            type="text" 
            name="search" 
            placeholder="Search for books, authors, or publishers..." 
            value="<%= filters.search %>"
            class="w-full border-0 rounded-2xl py-4 px-6 pr-14 text-lg shadow-lg focus:outline-none focus:ring-4 focus:ring-[#007D8B]/20 focus:shadow-xl transition-all duration-300"
          >
          <button type="submit" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-[#007D8B] transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
          </button>
        </div>
        
        <!-- Hidden inputs to preserve filters -->
        <% if (filters.sort) { %><input type="hidden" name="sort" value="<%= filters.sort %>"><% } %>
        <% if (filters.category) { %><input type="hidden" name="category" value="<%= filters.category %>"><% } %>
        <% if (filters.priceRange) { %><input type="hidden" name="priceRange" value="<%= filters.priceRange %>"><% } %>
      </form>
    </div>
  </div>
</section>

<!-- Filters and Products Section -->
<section class="py-8 bg-white">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    
    <!-- Filter Bar -->
    <div class="flex flex-col lg:flex-row gap-6 mb-8">
      
      <!-- Sidebar Filters (Desktop) -->
      <div class="lg:w-80 space-y-6">
        <div class="bg-white rounded-2xl shadow-sm border border-gray-100 p-6">
          <h2 class="text-xl font-semibold text-gray-900 mb-6">Filters</h2>
          
          <form action="/user/shop" method="GET" id="filter-form">
            <!-- Preserve search and sort -->
            <% if (filters.search) { %><input type="hidden" name="search" value="<%= filters.search %>"><% } %>
            <% if (filters.sort) { %><input type="hidden" name="sort" value="<%= filters.sort %>"><% } %>
            
            <!-- Category Filter -->
            <div class="mb-8">
              <h3 class="font-semibold text-gray-900 mb-4 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-[#007D8B]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z" />
                </svg>
                Category
              </h3>
              <div class="space-y-3">
                <% categories.forEach(category => { 
                  const categoryValue = category.name.toLowerCase();
                  const isChecked = filters.category && (
                    (typeof filters.category === 'string' && filters.category.split(',').includes(categoryValue)) ||
                    (Array.isArray(filters.category) && filters.category.includes(categoryValue))
                  );
                %>
                  <label class="flex items-center group cursor-pointer">
                    <input 
                      type="checkbox" 
                      name="category" 
                      value="<%= categoryValue %>" 
                      class="rounded-lg text-[#007D8B] focus:ring-[#007D8B] focus:ring-2 h-5 w-5 transition-all"
                      <%= isChecked ? 'checked' : '' %>
                    >
                    <span class="ml-3 text-gray-700 group-hover:text-gray-900 transition-colors"><%= category.name %></span>
                  </label>
                <% }) %>
              
              </div>
            </div>
            
            <!-- Price Range Filter -->
            <div class="mb-8">
              <h3 class="font-semibold text-gray-900 mb-4 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
                </svg>
                Price Range
              </h3>
              <div class="space-y-3">
                <% 
                  const priceRanges = ['under300', '300-400', '400-500', 'over500'];
                  const priceLabels = ['Under ₹300', '₹300 - ₹400', '₹400 - ₹500', 'Over ₹500'];
                  
                  priceRanges.forEach((range, index) => {
                    const isChecked = filters.priceRange && (
                      (typeof filters.priceRange === 'string' && filters.priceRange.split(',').includes(range)) ||
                      (Array.isArray(filters.priceRange) && filters.priceRange.includes(range))
                    );
                %>
                  <label class="flex items-center group cursor-pointer">
                    <input 
                      type="checkbox" 
                      name="priceRange" 
                      value="<%= range %>" 
                      class="rounded-lg text-green-600 focus:ring-green-500 focus:ring-2 h-5 w-5 transition-all"
                      <%= isChecked ? 'checked' : '' %>
                    >
                    <span class="ml-3 text-gray-700 group-hover:text-gray-900 transition-colors"><%= priceLabels[index] %></span>
                  </label>
                <% }) %>
              </div>
            </div>
            
            <!-- Filter Actions -->
            <div class="flex gap-3">
              <button type="submit" class="flex-1 bg-[#007D8B] hover:bg-[#006B7A] text-white font-semibold py-3 px-4 rounded-xl transition-all duration-200 transform hover:scale-105">
                Apply Filters
              </button>
              <a href="/user/shop" class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 font-semibold py-3 px-4 rounded-xl transition-all duration-200 text-center">
                Clear All
              </a>
            </div>
          </form>
        </div>
      </div>
      
      <!-- Main Content -->
      <div class="flex-1">
        
        <!-- Results Header -->
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-8">
          <div>
            <% if (totalProducts > 0) { %>
              <h2 class="text-2xl font-bold text-gray-900">
                <%= totalProducts %> Book<%= totalProducts !== 1 ? 's' : '' %> Found
              </h2>
              <p class="text-gray-600 mt-1">
                Showing <%= (currentPage - 1) * 12 + 1 %>-<%= Math.min(currentPage * 12, totalProducts) %> of <%= totalProducts %> results
              </p>
            <% } else { %>
              <h2 class="text-2xl font-bold text-gray-900">No Books Found</h2>
              <p class="text-gray-600 mt-1">Try adjusting your filters or search terms</p>
            <% } %>
          </div>
          
          <!-- Sort Dropdown -->
          <div class="relative" id="sort-dropdown-container">
            <button type="button" class="inline-flex items-center justify-between w-48 rounded-xl border border-gray-200 shadow-sm px-4 py-3 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-[#007D8B] transition-all" id="sort-dropdown-button">
              <span class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12" />
                </svg>
                Sort By
              </span>
              <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </button>
            <div class="hidden origin-top-right absolute right-0 mt-2 w-56 rounded-xl shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-20" id="sort-dropdown-menu">
              <div class="py-2">
                <a href="<%= buildQueryUrl({sort: 'price-low'}) %>" class="flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-teal-50 hover:text-[#007D8B] transition-colors <%= filters.sort === 'price-low' ? 'bg-teal-50 text-[#007D8B]' : '' %>">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 11l5-5m0 0l5 5m-5-5v12" />
                  </svg>
                  Price: Low to High
                </a>
                <a href="<%= buildQueryUrl({sort: 'price-high'}) %>" class="flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-teal-50 hover:text-[#007D8B] transition-colors <%= filters.sort === 'price-high' ? 'bg-teal-50 text-[#007D8B]' : '' %>">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 13l-5 5m0 0l-5-5m5 5V6" />
                  </svg>
                  Price: High to Low
                </a>
                <a href="<%= buildQueryUrl({sort: 'name-asc'}) %>" class="flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-teal-50 hover:text-[#007D8B] transition-colors <%= filters.sort === 'name-asc' ? 'bg-teal-50 text-[#007D8B]' : '' %>">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4" />
                  </svg>
                  Name: A - Z
                </a>
                <a href="<%= buildQueryUrl({sort: 'name-desc'}) %>" class="flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-teal-50 hover:text-[#007D8B] transition-colors <%= filters.sort === 'name-desc' ? 'bg-teal-50 text-[#007D8B]' : '' %>">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12" />
                  </svg>
                  Name: Z - A
                </a>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Products Grid -->
        <% if (products.length > 0) { %>
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            <% products.forEach((product) => { %>
              <div class="group bg-white rounded-2xl overflow-hidden shadow-sm hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border border-gray-100">
                
                <!-- Product Image -->
                <div class="relative aspect-[3/4] overflow-hidden">
                  <img 
                    src="<%= product.productImage[0] %>" 
                    alt="<%= product.name %>" 
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                  />
                  
                  
                  
                  <!-- Status Overlay -->
                  <% if (product.status !== 'Available' || product.quantity < 1) { %>
                    <div class="absolute inset-0 bg-gray-900/60 flex items-center justify-center">
                      <span class="bg-white text-gray-900 px-4 py-2 rounded-full font-semibold text-sm">
                        <%= product.status === 'Discontinued' ? 'Discontinued' : 'Out of Stock' %>
                      </span>
                    </div>
                  <% } %>
                  
                  <!-- Hover Actions -->
                  <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center space-x-3">
                    <a href="/user/product-details/<%= product._id %>" class="bg-white text-gray-900 px-4 py-2 rounded-full text-sm font-semibold hover:bg-gray-100 transition-colors transform hover:scale-105">
                      View Details
                    </a>

                    <!-- Wishlist Button -->
                  <button 
                    type="button"
                    id="wishlist-<%= product._id %>"
                    onclick="toggleWishlist('<%= product._id %>')"
                    class="absolute top-3 right-3 bg-white/90 backdrop-blur-sm p-2 rounded-full shadow-lg hover:bg-white hover:scale-110 transition-all duration-200"
                  >
                    <% if (userData && userData.wishlist && userData.wishlist.includes(product._id)) { %>
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 6 4 4 6.5 4 8.28 4 10 5.5 12 7.09 14 5.5 15.72 4 17.5 4 20 4 22 6 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                      </svg>
                    <% } else { %>
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 hover:text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.414 4.414 0 015.364-.364L12 7.414l2.318-2.318a4.414 4.414 0 015.364.364c1.562 1.562 1.562 4.096 0 5.657L12 21 4.318 11.975a4 4 0 010-5.657z" />
                      </svg>
                    <% } %>
                  </button>
                    
                    <% if (product.status === 'Available' && product.quantity > 0) { %>
                      <button 
                        class="add-to-cart-btn bg-[#007D8B] text-white px-4 py-2 rounded-full text-sm font-semibold hover:bg-[#006B7A] transition-colors transform hover:scale-105" 
                        data-product-id="<%= product._id %>">
                        Add to Cart
                      </button>
                    <% } %>
                  </div>
                </div>
                
                <!-- Product Info -->
                <div class="p-5">
                  <h3 class="font-semibold text-gray-900 mb-1 line-clamp-2 group-hover:text-[#007D8B] transition-colors">
                    <%= product.name %>
                  </h3>
                  <p class="text-sm text-gray-500 mb-3"><%= product.publisher %></p>
                  
                  <!-- Price -->
                  <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-2">
                      <span class="text-lg font-bold text-[#007D8B]">₹<%= product.discountedPrice %></span>
                      <% if (product.price !== product.discountedPrice) { %>
                        <span class="text-sm text-gray-400 line-through">₹<%= product.price.toFixed(2) %></span>
                      <% } %>
                    </div>
                    
                    <% if (product.price !== product.discountedPrice) { %>
                      <span class="bg-green-100 text-green-800 text-xs font-semibold px-2 py-1 rounded-full">
                        <%= Math.round(((product.price - product.discountedPrice) / product.price) * 100) %>% OFF
                      </span>
                    <% } %>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
        <% } else { %>
          <!-- Empty State -->
          <div class="text-center py-16">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-24 w-24 text-gray-300 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
            </svg>
            <h3 class="text-xl font-semibold text-gray-900 mb-2">No books found</h3>
            <p class="text-gray-600 mb-6">Try adjusting your search terms or filters</p>
            <a href="/user/shop" class="inline-flex items-center px-6 py-3 bg-[#007D8B] text-white font-semibold rounded-xl hover:bg-[#006B7A] transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              Clear All Filters
            </a>
          </div>
        <% } %>
        
        <!-- Pagination -->
        <% if (totalPages > 1) { %>
          <div class="flex justify-center mt-12">
            <nav class="flex items-center space-x-2">
              <% if (currentPage > 1) { %>
                <a href="<%= buildQueryUrl({page: currentPage - 1}) %>" class="flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                  </svg>
                  Previous
                </a>
              <% } %>
              
              <% 
                let startPage = Math.max(1, currentPage - 2);
                let endPage = Math.min(totalPages, currentPage + 2);
                
                if (startPage > 1) { %>
                  <a href="<%= buildQueryUrl({page: 1}) %>" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">1</a>
                  <% if (startPage > 2) { %>
                    <span class="px-2 py-2 text-sm text-gray-500">...</span>
                  <% } %>
                <% }
                
                for(let i = startPage; i <= endPage; i++) { %>
                  <% if (i === currentPage) { %>
                    <span class="px-4 py-2 text-sm font-medium text-white bg-[#007D8B] border border-[#007D8B] rounded-lg">
                      <%= i %>
                    </span>
                  <% } else { %>
                    <a href="<%= buildQueryUrl({page: i}) %>" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                      <%= i %>
                    </a>
                  <% } %>
                <% }
                
                if (endPage < totalPages) { %>
                  <% if (endPage < totalPages - 1) { %>
                    <span class="px-2 py-2 text-sm text-gray-500">...</span>
                  <% } %>
                  <a href="<%= buildQueryUrl({page: totalPages}) %>" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"><%= totalPages %></a>
                <% } %>
              
              <% if (currentPage < totalPages) { %>
                <a href="<%= buildQueryUrl({page: currentPage + 1}) %>" class="flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                  Next
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                  </svg>
                </a>
              <% } %>
            </nav>
          </div>
        <% } %>
        
      </div>
    </div>
  </div>
</section>

<%- include("../partials/userFooter") %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function toggleWishlist(productId) {
  fetch(`/user/wishlist/${productId}`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' }
  })
  .then(res => res.json())
  .then(data => {
    if (data.success) {
      const button = document.getElementById(`wishlist-${productId}`);
      if (!button) return;

      const isRemoved = data.message.includes('Removed') || data.message.includes('removed');
      
      button.innerHTML = isRemoved
        ? `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 hover:text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.414 4.414 0 015.364-.364L12 7.414l2.318-2.318a4.414 4.414 0 015.364.364c1.562 1.562 1.562 4.096 0 5.657L12 21 4.318 11.975a4 4 0 010-5.657z" />
           </svg>`
        : `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" viewBox="0 0 24 24" fill="currentColor">
             <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 6 4 4 6.5 4 8.28 4 10 5.5 12 7.09 14 5.5 15.72 4 17.5 4 20 4 22 6 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
           </svg>`;

      // Show toast notification
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: 'success',
        title: data.message,
        showConfirmButton: false,
        timer: 1500,
        timerProgressBar: true
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Oops',
        text: data.message || 'Something went wrong'
      });
    }
  })
  .catch(err => {
    console.error('Wishlist error:', err);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Something went wrong'
    });
  });
}


document.addEventListener('DOMContentLoaded', function() {
  
  // Filter form handling with proper checkbox management
  const filterForm = document.getElementById('filter-form');
  if (filterForm) {
    filterForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Get checked checkboxes
      const categoryCheckboxes = document.querySelectorAll('input[name="category"]:checked');
      const priceRangeCheckboxes = document.querySelectorAll('input[name="priceRange"]:checked');
      
      // Remove existing category and priceRange inputs to avoid duplicates
      filterForm.querySelectorAll('input[name="category"]:not([type="checkbox"])').forEach(el => el.remove());
      filterForm.querySelectorAll('input[name="priceRange"]:not([type="checkbox"])').forEach(el => el.remove());
      
      // Create comma-separated values for multiple selections
      if (categoryCheckboxes.length > 0) {
        const categoryValues = Array.from(categoryCheckboxes).map(cb => cb.value);
        const categoryInput = document.createElement('input');
        categoryInput.type = 'hidden';
        categoryInput.name = 'category';
        categoryInput.value = categoryValues.join(',');
        filterForm.appendChild(categoryInput);
      }
      
      if (priceRangeCheckboxes.length > 0) {
        const priceRangeValues = Array.from(priceRangeCheckboxes).map(cb => cb.value);
        const priceRangeInput = document.createElement('input');
        priceRangeInput.type = 'hidden';
        priceRangeInput.name = 'priceRange';
        priceRangeInput.value = priceRangeValues.join(',');
        filterForm.appendChild(priceRangeInput);
      }
      
      // Submit the form
      filterForm.submit();
    });
  }
  
  // Sort dropdown functionality
  const sortDropdownButton = document.getElementById('sort-dropdown-button');
  const sortDropdownMenu = document.getElementById('sort-dropdown-menu');
  
  if (sortDropdownButton && sortDropdownMenu) {
    sortDropdownButton.addEventListener('click', (e) => {
      e.stopPropagation();
      sortDropdownMenu.classList.toggle('hidden');
    });
    
    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
      if (!sortDropdownButton.contains(e.target) && !sortDropdownMenu.contains(e.target)) {
        sortDropdownMenu.classList.add('hidden');
      }
    });
  }
  
  // Add to cart functionality
  document.querySelectorAll('.add-to-cart-btn').forEach(button => {
    button.addEventListener('click', async (e) => {
      e.preventDefault();
      const productId = button.dataset.productId;
      
      // Add loading state
      const originalText = button.textContent;
      button.textContent = 'Adding...';
      button.disabled = true;

      try {
        const response = await fetch(`/user/cart/add/${productId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });

        const data = await response.json();

        if (data.success) {
          if (data.alreadyInCart) {
            Swal.fire({
              toast: true,
              icon: 'info',
              title: 'Product is already in cart',
              position: 'top-end',
              showConfirmButton: false,
              timer: 2000,
              timerProgressBar: true
            });
          } else if (data.added) {
            Swal.fire({
              toast: true,
              icon: 'success',
              title: 'Product added to cart',
              position: 'top-end',
              showConfirmButton: false,
              timer: 2000,
              timerProgressBar: true
            });
          }
        } else {
          throw new Error(data.message || 'Something went wrong');
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: error.message,
          confirmButtonColor: '#007D8B'
        });
      } finally {
        // Reset button state
        button.textContent = originalText;
        button.disabled = false;
      }
    });
  });
});
</script>
</body>
<style>
/* Additional CSS for enhanced styling with your theme color */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Custom scrollbar for better UX */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: #f1f5f9;
}

::-webkit-scrollbar-thumb {
  background: #007D8B;
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: #006B7A;
}

/* Smooth transitions for all interactive elements */
* {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* Custom focus styles with your theme color */
input:focus, button:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 125, 139, 0.1);
}
</style>