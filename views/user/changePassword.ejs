<div class="w-full bg-white shadow-custom rounded-xl p-6">
  <div class="flex items-center justify-between mb-6">
    <div>
      <h2 class="text-2xl font-bold text-gray-900">Change Password</h2>
      <p class="text-gray-600 mt-1">Update your password to keep your account secure</p>
    </div>
    <div class="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center">
      <i class="fas fa-lock text-primary text-xl"></i>
    </div>
  </div>

  <% if (typeof error !== 'undefined' && error) { %>
    <div class="mb-6 p-4 rounded-lg bg-red-50 border border-red-200">
      <div class="flex items-center">
        <i class="fas fa-exclamation-circle text-red-500 mr-2"></i>
        <span class="text-red-700"><%= error %></span>
      </div>
    </div>
  <% } %>

  <% if (typeof success !== 'undefined' && success) { %>
    <div class="mb-6 p-4 rounded-lg bg-green-50 border border-green-200">
      <div class="flex items-center">
        <i class="fas fa-check-circle text-green-500 mr-2"></i>
        <span class="text-green-700"><%= success %></span>
      </div>
    </div>
  <% } %>

  <form id="passwordForm" method="POST" action="/user/profile/change-password" class="space-y-6">
    <!-- Current Password -->
    <div class="form-group">
      <label for="currentPassword" class="block font-medium text-gray-700 mb-1">Current Password</label>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <i class="fas fa-key text-gray-400"></i>
        </div>
        <input 
          type="password" 
          id="currentPassword" 
          name="currentPassword" 
          class="w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all" 
          placeholder="Enter your current password"
        />
        <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password" data-target="currentPassword">
          <i class="fas fa-eye text-gray-400 hover:text-gray-600"></i>
        </button>
      </div>
      <div id="currentPasswordError" class="text-primary text-sm mt-1 hidden"></div>
    </div>

    <!-- New Password -->
    <div class="form-group">
      <label for="newPassword" class="block font-medium text-gray-700 mb-1">New Password</label>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <i class="fas fa-lock text-gray-400"></i>
        </div>
        <input 
          type="password" 
          id="newPassword" 
          name="newPassword" 
          class="w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all" 
          placeholder="Enter your new password"
        />
        <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password" data-target="newPassword">
          <i class="fas fa-eye text-gray-400 hover:text-gray-600"></i>
        </button>
      </div>
      <div id="newPasswordError" class="text-primary text-sm mt-1 hidden"></div>
      
      <!-- Password Strength Indicator -->
      <div class="mt-2">
        <div class="flex items-center space-x-2">
          <div class="flex-1 bg-gray-200 rounded-full h-2">
            <div id="strengthBar" class="h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
          </div>
          <span id="strengthText" class="text-xs font-medium text-gray-500">Weak</span>
        </div>
        <div class="mt-1 text-xs text-gray-500">
          Password must contain at least 8 characters, including uppercase, lowercase, number, and special character
        </div>
      </div>
    </div>

    <!-- Confirm New Password -->
    <div class="form-group">
      <label for="confirmPassword" class="block font-medium text-gray-700 mb-1">Confirm New Password</label>
      <div class="relative">
        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <i class="fas fa-check-double text-gray-400"></i>
        </div>
        <input 
          type="password" 
          id="confirmPassword" 
          name="confirmPassword" 
          class="w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all" 
          placeholder="Confirm your new password"
        />
        <button type="button" class="absolute inset-y-0 right-0 pr-3 flex items-center toggle-password" data-target="confirmPassword">
          <i class="fas fa-eye text-gray-400 hover:text-gray-600"></i>
        </button>
      </div>
      <div id="confirmPasswordError" class="text-primary text-sm mt-1 hidden"></div>
    </div>

    <div class="pt-4 flex items-center justify-between">
      <button type="button" class="text-gray-600 hover:text-gray-800 transition-colors" onclick="window.history.back()">
        <i class="fas fa-arrow-left mr-1"></i> Cancel
      </button>
      <button 
        type="submit" 
        id="submitBtn"
        class="bg-primary hover:bg-primary-dark text-white px-6 py-3 rounded-lg transition-all flex items-center justify-center"
      >
        <i class="fas fa-shield-alt mr-2"></i> Update Password
      </button>
    </div>
  </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('passwordForm');
  const currentPasswordInput = document.getElementById('currentPassword');
  const newPasswordInput = document.getElementById('newPassword');
  const confirmPasswordInput = document.getElementById('confirmPassword');
  const submitBtn = document.getElementById('submitBtn');
  
  // Error elements
  const currentPasswordError = document.getElementById('currentPasswordError');
  const newPasswordError = document.getElementById('newPasswordError');
  const confirmPasswordError = document.getElementById('confirmPasswordError');
  
  // Password strength elements
  const strengthBar = document.getElementById('strengthBar');
  const strengthText = document.getElementById('strengthText');
  
  // Password toggle functionality
  document.querySelectorAll('.toggle-password').forEach(button => {
    button.addEventListener('click', function() {
      const targetId = this.getAttribute('data-target');
      const targetInput = document.getElementById(targetId);
      const icon = this.querySelector('i');
      
      if (targetInput.type === 'password') {
        targetInput.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
      } else {
        targetInput.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
      }
    });
  });
  
  // Password strength checker
  function checkPasswordStrength(password) {
    let strength = 0;
    let feedback = [];
    
    if (password.length >= 8) strength += 1;
    else feedback.push('at least 8 characters');
    
    if (/[a-z]/.test(password)) strength += 1;
    else feedback.push('lowercase letter');
    
    if (/[A-Z]/.test(password)) strength += 1;
    else feedback.push('uppercase letter');
    
    if (/[0-9]/.test(password)) strength += 1;
    else feedback.push('number');
    
    if (/[^A-Za-z0-9]/.test(password)) strength += 1;
    else feedback.push('special character');
    
    return { strength, feedback };
  }
  
  function updatePasswordStrength(password) {
    const { strength } = checkPasswordStrength(password);
    const percentage = (strength / 5) * 100;
    
    strengthBar.style.width = percentage + '%';
    
    if (strength <= 2) {
      strengthBar.className = 'h-2 rounded-full transition-all duration-300 bg-red-500';
      strengthText.textContent = 'Weak';
      strengthText.className = 'text-xs font-medium text-red-500';
    } else if (strength <= 3) {
      strengthBar.className = 'h-2 rounded-full transition-all duration-300 bg-yellow-500';
      strengthText.textContent = 'Medium';
      strengthText.className = 'text-xs font-medium text-yellow-500';
    } else if (strength <= 4) {
      strengthBar.className = 'h-2 rounded-full transition-all duration-300 bg-blue-500';
      strengthText.textContent = 'Good';
      strengthText.className = 'text-xs font-medium text-blue-500';
    } else {
      strengthBar.className = 'h-2 rounded-full transition-all duration-300 bg-green-500';
      strengthText.textContent = 'Strong';
      strengthText.className = 'text-xs font-medium text-green-500';
    }
  }
  
  // Validation functions
  function validateCurrentPassword() {
    if (!currentPasswordInput.value.trim()) {
      showError(currentPasswordError, 'Current password is required');
      return false;
    } else {
      hideError(currentPasswordError);
      return true;
    }
  }
  
  function validateNewPassword() {
    const password = newPasswordInput.value;
    const { strength, feedback } = checkPasswordStrength(password);
    
    if (!password) {
      showError(newPasswordError, 'New password is required');
      return false;
    } else if (strength < 4) {
      showError(newPasswordError, `Password must include: ${feedback.join(', ')}`);
      return false;
    } else if (password === currentPasswordInput.value) {
      showError(newPasswordError, 'New password must be different from current password');
      return false;
    } else {
      hideError(newPasswordError);
      return true;
    }
  }
  
  function validateConfirmPassword() {
    if (!confirmPasswordInput.value) {
      showError(confirmPasswordError, 'Please confirm your new password');
      return false;
    } else if (confirmPasswordInput.value !== newPasswordInput.value) {
      showError(confirmPasswordError, 'Passwords do not match');
      return false;
    } else {
      hideError(confirmPasswordError);
      return true;
    }
  }
  
  function showError(element, message) {
    element.textContent = message;
    element.classList.remove('hidden');
    element.parentElement.querySelector('input').classList.add('border-primary');
  }
  
  function hideError(element) {
    element.textContent = '';
    element.classList.add('hidden');
    element.parentElement.querySelector('input').classList.remove('border-primary');
  }
  
  // Event listeners
  currentPasswordInput.addEventListener('blur', validateCurrentPassword);
  newPasswordInput.addEventListener('input', function() {
    updatePasswordStrength(this.value);
  });
  newPasswordInput.addEventListener('blur', validateNewPassword);
  confirmPasswordInput.addEventListener('blur', validateConfirmPassword);
  
  // Form submission
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const isCurrentValid = validateCurrentPassword();
    const isNewValid = validateNewPassword();
    const isConfirmValid = validateConfirmPassword();
    
    if (isCurrentValid && isNewValid && isConfirmValid) {
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Updating...';
      this.submit();
    }
  });
});
</script>