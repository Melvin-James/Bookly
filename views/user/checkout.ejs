<%- include("../partials/userHead") %>

<div class="max-w-7xl mx-auto px-4 py-8">

<h1 class="text-3xl font-bold text-primary mb-8">Checkout</h1>
<form id="placeOrderForm" action="/user/place-order" method="POST">
  <div class="grid grid-cols-1 md:grid-cols-3 gap-8">

    <!-- Left: Address and Payment -->
    <div class="md:col-span-2 space-y-8">

      <!-- Address Selection -->
      <div class="bg-white p-6 rounded-lg shadow">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-xl font-semibold">Select Delivery Address</h2>
          <a href="/user/profile/addresses/add" class="bg-[#007D8B] text-white px-4 py-2 rounded hover:bg-opacity-90 transition">
            + Add Address
          </a>
        </div>
      
        <% if (addressData.length) { %>
          <input type="hidden" name="razorpay_payment_id" id="razorpayPaymentId" />
          <input type="hidden" name="razorpay_order_id" id="razorpayOrderId" />
          <div class="space-y-4">
            <% addressData.forEach(addr => { %>
              <label class="flex items-start gap-3 cursor-pointer">
                <input type="radio" name="addressId" value="<%= addr._id %>" class="mt-1" required />
                <div>
                  <p class="font-medium"><%= addr.name %> - <%= addr.addressType %></p>
                  <p class="text-sm text-gray-600">
                    <%= addr.city %>, <%= addr.state %> - <%= addr.pincode %><br>
                    <%= addr.phone %> | Alt: <%= addr.altPhone %>
                  </p>
                </div>
              </label>
            <% }) %>
          </div>
        <% } else { %>
          <p class="text-gray-500">No saved addresses.</p>
        <% } %>
      </div>
      

      <!-- Payment Method -->
      <div class="bg-white p-6 rounded-2xl shadow-lg">
        <h2 class="text-2xl font-semibold mb-6 text-gray-800">Select Payment Method</h2>
        
        <div class="space-y-4">
          <label class="flex items-center justify-between p-4 border rounded-xl hover:border-primary transition cursor-pointer">
            <div class="flex items-center gap-4">
              <input type="radio" name="paymentMethod" value="COD" checked required class="accent-primary w-5 h-5" />
              <span class="text-lg text-gray-700">Cash on Delivery (COD)</span>
            </div>
            <span class="text-sm text-gray-500">Pay on arrival</span>
          </label>
      
          <label class="flex items-center justify-between p-4 border rounded-xl hover:border-primary transition cursor-pointer">
            <div class="flex items-center gap-4">
              <input type="radio" name="paymentMethod" value="Online" required class="accent-primary w-5 h-5" />
              <span class="text-lg text-gray-700">Online Payment</span>
            </div>
            <span class="text-sm text-gray-500">Pay securely with Razorpay</span>
          </label>
        </div>
      </div>
      

    </div>

    <!-- Right: Order Summary -->
    <div class="bg-white p-6 rounded-lg shadow space-y-6">

      <!-- Coupon Box -->
      <div class="space-y-2">
        <h2 class="text-xl font-semibold mb-2">Have a Coupon?</h2>
        <% if (validCoupons && validCoupons.length) { %>
          <div class="bg-green-50 border border-green-300 p-4 rounded-md mt-4 shadow-sm">
            <h3 class="text-sm font-semibold text-green-800 mb-2">Available Coupons</h3>
            <div class="space-y-2">
              <% validCoupons.forEach(coupon => { %>
                <div class="bg-white border border-dashed border-green-400 p-3 rounded flex justify-between items-center">
                  <div>
                    <span class="font-bold text-green-700"><%= coupon.code %></span>
                    <p class="text-sm text-gray-600">
                      <%= coupon.discountType === 'Flat' 
                        ? '₹' + coupon.discountAmount + ' off' 
                        : coupon.discountAmount + '% off' %>
                      (Min. ₹<%= coupon.minCartAmount %>)
                    </p>
                  </div>
                  <button 
                    type="button" 
                    onclick="document.getElementById('couponCode').value='<%= coupon.code %>'" 
                    class="bg-green-500 hover:bg-green-600 text-white text-xs px-3 py-1 rounded transition">
                    Apply
                  </button>
                </div>
              <% }) %>
            </div>
          </div>
        <% } %>
        <div class="flex gap-2">
          <input type="text" id="couponCode" class="border rounded-md px-4 py-2 w-full" placeholder="Enter Coupon Code" />
          <button type="button" id="applyCouponBtn" class="bg-primary text-white px-4 py-2 rounded-md hover:bg-primary-dark transition">
            Apply
          </button>
          <button type="button" id="removeCouponBtn" class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600 transition hidden">
            Remove
          </button>
        </div>
      </div>

      <!-- Cart Items -->
      <div class="space-y-3 border-t pt-4">
        <% 
          const cartTotalDisplay = cartTotal;
        %>
      <input type="hidden" id="originalTotal" value="<%= cartTotal.toFixed(2) %>" />
      </div>

      <!-- Total Summary -->
      <div class="border-t pt-4 text-gray-800 space-y-2">
        <div class="flex justify-between font-medium">
          <span>Subtotal:</span>
          <span>₹<%= cartTotalDisplay.toFixed(2) %></span>
        </div>

        <div class="flex justify-between text-sm text-green-600" id="discountSection" style="display: none;">
          <span>Coupon Discount:</span>
          <span id="discountAmount">- ₹0</span>
        </div>

        <div class="flex justify-between text-lg font-bold">
          <span>Total Payable:</span>
          <span id="totalPayable">₹<%= cartTotalDisplay.toFixed(2) %></span>
        </div>
      </div>

      <!-- Place Order Button -->
      <div class="pt-6">
        <button type="button" onclick="handlePlaceOrder()" class="w-full bg-primary text-white py-3 rounded-md hover:bg-primary-dark transition">
          Place Order
        </button>        
      </div>
    </div>

</form>

  </div>

</div>

<%- include("../partials/userFooter") %>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<!-- Coupon JS -->
<script>
  document.getElementById('applyCouponBtn').addEventListener('click', async () => {
    const code = document.getElementById('couponCode').value.trim();
    const originalTotal = parseFloat(document.getElementById('originalTotal').value);
    if (!code) {
      Swal.fire({
        icon: 'info',
        title: 'Enter a coupon code first!',
        confirmButtonColor: '#007D8B',
      });
      return;
    }

    const response = await fetch('/user/apply-coupon', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ couponCode: code })
    });

    const data = await response.json();
    if (data.success) {
      Swal.fire({
        icon: 'success',
        title: 'Coupon Applied!',
        text: data.message,
        confirmButtonColor: '#007D8B',
      });
      document.getElementById('discountSection').style.display = 'flex';
      document.getElementById('discountAmount').innerText = `- ₹${data.discount.toFixed(2)}`;
      document.getElementById('totalPayable').innerText = `₹${data.finalTotal.toFixed(2)}`;
      document.getElementById('applyCouponBtn').classList.add('hidden');
      document.getElementById('removeCouponBtn').classList.remove('hidden');
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Failed!',
        text: data.message,
        confirmButtonColor: '#007D8B',
      });
    }
  });

  document.getElementById('removeCouponBtn').addEventListener('click', async () => {
    const response = await fetch('/user/remove-coupon', { method: 'POST' });
    const data = await response.json();
    if (data.success) {
      Swal.fire({
        icon: 'success',
        title: 'Coupon Removed!',
        text: data.message,
        confirmButtonColor: '#007D8B',
      });
      document.getElementById('discountSection').style.display = 'none';
      document.getElementById('discountAmount').innerText = '- ₹0';
      document.getElementById('totalPayable').innerText = '₹' + parseFloat(document.getElementById('originalTotal').value).toFixed(2);
      document.getElementById('applyCouponBtn').classList.remove('hidden');
      document.getElementById('removeCouponBtn').classList.add('hidden');
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Failed!',
        text: data.message,
        confirmButtonColor: '#007D8B',
      });
    }
  });
</script>


<script>
  async function handlePlaceOrder() {
    event.preventDefault();
    const addressRadio = document.querySelector('input[name="addressId"]:checked');
    if (!addressRadio) {
      Swal.fire({
        icon: 'warning',
        title: 'Select a delivery address',
        text: 'Please choose an address before placing your order.',
        confirmButtonColor:'#007D8B',
      });
      return;
    }

    const addressId = addressRadio.value;


    const form = document.getElementById('placeOrderForm');
    const paymentMethod = form.querySelector('input[name="paymentMethod"]:checked').value;

    if (paymentMethod === 'COD') {
      form.submit(); 
    } else if (paymentMethod === 'Online') {
      const amountText = document.getElementById('totalPayable').innerText.replace('₹', '').trim();
      const amount = Math.round(parseFloat(amountText));

      try {
        const res = await fetch('/user/create-order', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ amount })
        });

        const data = await res.json();
        if (!data.success) {
          Swal.fire({
            icon: 'error',
            title: 'Payment Failed',
            text: result.message,
            confirmButtonColor: '#007D8B',
          }).then(() => {
          window.location.href = '/user/order-failure';
        });
       }


        const razorpayOptions = {
          key: '<%= process.env.RAZORPAY_KEY_ID %>',
          amount: data.order.amount,
          currency: "INR",
          name: "Bookly",
          description: "Order Payment",
          order_id: data.order.id,
          theme: {
              color: "#007D8B" 
          },
          handler: function (response) {
            document.getElementById('razorpayPaymentId').value = response.razorpay_payment_id;
            document.getElementById('razorpayOrderId').value = response.razorpay_order_id;
            form.submit();
          },
          modal: {
            ondismiss: function () {
              fetch('/user/place-order', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  paymentMethod: 'Online',
                  status: 'Failed',
                  addressId: document.querySelector('input[name="addressId"]').value
                })
              }).then(() => {
                window.location.href = '/user/order-failure';
              }).catch(() => {
                alert('Failed to log failed order.');
              });
            }
          }
        }
        const rzp = new Razorpay(razorpayOptions);
        rzp.open();

      } catch (err) {
        Swal.fire({
          icon: 'error',
          title: 'Payment Error',
          text: err.message,
          confirmButtonColor: '#007D8B',
        }).then(() => {
  window.location.href = '/user/order-failure';
});

      }
    }
  }
</script>
<% if (typeof codLimitError !== 'undefined') { %>
<script>
  Swal.fire({
    icon: 'warning',
    title: 'COD Not Allowed',
    text: '<%= codLimitError %>',
    confirmButtonColor: '#007D8B',
  });
</script>
<% } %>
