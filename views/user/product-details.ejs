<%- include("../partials/userHead") %>
<style>
  #zoomResult {
    display: none;
    position: absolute;
    top: 0;
    left: 100%;
    margin-left: 20px;
    width: 400px;
    height: 500px;
    border: 1px solid #ccc;
    background-repeat: no-repeat;
    background-size: 200%;
    background-position: center;
    z-index: 50;
    pointer-events: none;
  }
</style>  
<section class="py-4">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Breadcrumb -->
    <nav class="text-sm text-gray-500 mb-6">
      <a href="/user/home" class="hover:text-primary">Home</a> / 
      <a href="/user/home" class="hover:text-primary">Books</a> / 
      <span class="text-gray-800"><%= product.name %></span>
    </nav>
  
    <!-- Product Display -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-10">
      <!-- Images -->
      <div>
        <div class="relative group border rounded-xl overflow-hidden">
          <form method="POST" action="/user/wishlist/<%= product._id %>" class="absolute top-2 right-2 z-10">
              <button 
                type="button"
                id="wishlist-<%= product._id %>"
                onclick="toggleWishlist('<%= product._id %>')"
                class="wishlist-btn absolute top-2 right-2 z-10 bg-white p-1 rounded-full shadow hover:bg-red-500 hover:text-white transition"
              >
                <%- userData?.wishlist?.includes(product._id) 
                    ? `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 6 4 4 6.5 4 
                        8.28 4 10 5.5 12 7.09 14 5.5 15.72 4 17.5 4 
                        20 4 22 6 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                      </svg>` 
                    : `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                        d="M4.318 6.318a4.414 4.414 0 015.364-.364L12 7.414l2.318-2.318a4.414 
                        4.414 0 015.364.364c1.562 1.562 1.562 4.096 0 5.657L12 21 
                        4.318 11.975a4 4 0 010-5.657z" />
                      </svg>` %>
              </button>
            </form>
          <img id="mainImage" src="/uploads/product-images/<%= product.productImage[0] %>" alt="<%= product.name %>" 
              class="w-full h-[500px] object-cover rounded-xl shadow-md transition-transform duration-200 transform"
              style="cursor: zoom-in;" />
          <div id="zoomResult" class="hidden absolute top-0 left-full ml-4 w-[400px] h-[500px] bg-no-repeat border rounded-xl shadow-lg z-50"></div>
        </div>

        <!-- Thumbnails -->
        <div class="flex space-x-3 overflow-x-auto mt-4">
          <% product.productImage.forEach((img, idx) => { %>
            <img src="/uploads/product-images/<%= img %>" 
                data-index="<%= idx %>"
                class="thumbnail h-20 w-20 object-cover rounded-lg border hover:ring-2 hover:ring-primary transition cursor-pointer">
          <% }) %>
        </div>
      </div>

      <!-- Info -->
      <div class="flex flex-col justify-between">
        <div>
          <h1 class="text-2xl font-bold text-gray-900 mb-2"><%= product.name %></h1>
          <p class="text-sm text-gray-600 mb-4">By <%= product.publisher %></p>
  
          <!-- Ratings -->
          <div class="flex items-center space-x-2 mb-4">
            <% for (let i = 0; i < Math.floor(product.rating || 4); i++) { %>
              <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20"><path d="M9.049 2.927c..."/></svg>
            <% } %>
            <span class="text-sm text-gray-500">(124 reviews)</span>
          </div>
  
          <!-- Stock -->
          <% if (product.status === 'Available') { %>
            <p class="text-green-600 font-medium mb-4">In Stock</p>
          <% } else if (product.status === 'Out of Stock') { %>
            <p class="text-red-500 font-medium mb-4">Out of Stock</p>
          <% } else { %>
            <p class="text-gray-500 font-medium mb-4">Discontinued</p>
          <% } %>
  
          <!-- Pricing -->
  
            <div class="flex items-center space-x-3 mb-4">
              <span class="text-xl text-gray-400 line-through">₹<%= product.price.toFixed(2) %></span>
              <span class="text-2xl text-primary font-bold">₹<%= product.discountedPrice %></span>
              <span class="text-sm text-green-500">Save <%= product.appliedOffer %>%</span>
            </div>
  
  
          <!-- Highlights -->
          <div class="mb-6">
            <h2 class="text-lg font-semibold text-gray-800 mb-2">Highlights</h2>
            <ul class="list-disc list-inside text-gray-600 space-y-1">
              <li>Color: <%= product.color %></li>
              <li>Category: <%= product.category.name %></li>
              <li>Publisher: <%= product.publisher %></li>
            </ul>
          </div>
  
          <!-- Add to Cart -->
          <button 
            class="add-to-cart-btn w-full bg-primary text-white py-3 rounded-md hover:bg-primary-dark transition text-sm font-medium" 
            data-product-id="<%= product._id %>">
            Add to Cart
          </button>
        </div>
      </div>
    </div>
  
    <!-- Related Products -->
    <div class="mt-6">
    <h2 class="text-lg font-bold mb-4">Related Books</h2>
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
        <% relatedProducts.forEach(function(book) { %>
            <div class="border p-4 rounded-md shadow-sm group relative overflow-hidden">
                

                <img src="/uploads/product-images/<%= book.productImage[0] %>" 
                     alt="<%= book.name %>" 
                     class="w-full h-40 object-cover rounded-md transition-transform group-hover:scale-105 duration-300">
                

                <div class="absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 
                            flex items-center justify-center transition-opacity duration-300 gap-2">
                    <a href="/user/product-details/<%= book._id %>">
                        <button class="bg-white text-gray-800 px-4 py-2 rounded-md text-sm font-medium 
                                       hover:bg-gray-100 transition-colors">
                            View
                        </button>
                    </a>
                    <button 
                      class="add-to-cart-btn bg-primary text-white px-4 py-2 rounded-md text-sm font-medium 
                            hover:bg-primary-dark transition-colors" 
                      data-product-id="<%= book._id %>">
                      Add to Cart
                    </button>
                </div>

                <div class="p-4">
                    <h3 class="font-medium text-gray-900"><%= book.name %></h3>
                    <p class="text-sm text-gray-500"><%= book.publisher %></p>

                    <% if (book.productOffer > 0) { %>
                        <div class="flex items-center space-x-2">
                            <span class="text-sm text-gray-400 line-through">₹<%= book.price.toFixed(2) %></span>
                            <span class="font-bold text-primary">
                                ₹<%= (book.price * (1 - book.productOffer / 100)).toFixed(2) %>
                            </span>
                        </div>
                    <% } else { %>
                        <p class="font-bold text-primary">₹<%= book.price.toFixed(2) %></p>
                    <% } %>
                </div>
            </div>
        <% }); %>
    </div>
</div>
  </main>
  </div>
</section>


<script>
  function toggleWishlist(productId) {
  fetch(`/user/wishlist/${productId}`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' }
  })
  .then(res => res.json())
  .then(data => {
    if (data.success) {
      const button = document.getElementById(`wishlist-${productId}`);
      if (!button) return;

      // Update the heart icon dynamically
      button.innerHTML = data.message.includes('Removed')
        ? `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
             <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.414 4.414 0 015.364-.364L12 7.414l2.318-2.318a4.414 4.414 0 015.364.364c1.562 1.562 1.562 4.096 0 5.657L12 21 4.318 11.975a4 4 0 010-5.657z" />
           </svg>`
        : `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" viewBox="0 0 24 24" fill="currentColor">
             <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 6 4 4 6.5 4 8.28 4 10 5.5 12 7.09 14 5.5 15.72 4 17.5 4 20 4 22 6 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
           </svg>`;

      // Toast
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: 'success',
        title: data.message,
        showConfirmButton: false,
        timer: 1500
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Oops',
        text: data.message
      });
    }
  })
  .catch(err => {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Something went wrong'
    });
  });
}
  const mainImage = document.getElementById("mainImage");
  const thumbnails = document.querySelectorAll(".thumbnail");
  const zoomResult = document.getElementById("zoomResult");

  function updateZoomImage(src) {
    zoomResult.style.backgroundImage = `url('${src}')`;
  }

  thumbnails.forEach(thumbnail => {
    thumbnail.addEventListener("click", () => {
      const newSrc = thumbnail.getAttribute("src");
      mainImage.src = newSrc;
      updateZoomImage(newSrc);
    });
  });

  mainImage.addEventListener("mouseenter", () => {
    zoomResult.style.display = "block";
    zoomResult.classList.remove("hidden");
    updateZoomImage(mainImage.src);
  });

  mainImage.addEventListener("mouseleave", () => {
    zoomResult.style.display = "none";
    zoomResult.classList.add("hidden");
  });

  mainImage.addEventListener("mousemove", function (e) {
    const rect = mainImage.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;

    const xPercent = (x / rect.width) * 100;
    const yPercent = (y / rect.height) * 100;

    // Update zoomResult background and positioning
    zoomResult.style.backgroundSize = `${mainImage.offsetWidth * 2}px ${mainImage.offsetHeight * 2}px`;
    zoomResult.style.backgroundPosition = `${xPercent}% ${yPercent}%`;
  });
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.querySelectorAll('.add-to-cart-btn').forEach(button => {
    button.addEventListener('click', async () => {
      const productId = button.getAttribute('data-product-id');

      try {
        const response = await fetch(`/user/cart/add/${productId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          }
        });

        const result = await response.json();

        if (result.alreadyInCart) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'info',
            title: 'Already in cart',
            showConfirmButton: false,
            timer: 2000
          });
        } else if (result.added) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'success',
            title: 'Added to cart',
            showConfirmButton: false,
            timer: 2000
          });
        } else {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: result.message || 'Something went wrong',
            showConfirmButton: false,
            timer: 2000
          });
        }
      } catch (error) {
        console.error('Add to cart failed:', error);
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: 'Server error',
          showConfirmButton: false,
          timer: 2000
        });
      }
    });
  });
</script>


  <%- include("../partials/userFooter") %>