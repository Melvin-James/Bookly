<div class="min-h-screen bg-gray-50">
  <!-- Page Header -->
  <div class="bg-white shadow-sm border-b border-gray-200 mb-6">
    <div class="px-4 sm:px-6 lg:px-8 py-6">
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <div>
          <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 flex items-center gap-3">
            <div class="w-10 h-10 bg-gradient-to-br from-primary to-primary-dark rounded-xl flex items-center justify-center shadow-lg">
              <i class="ri-file-list-3-line text-white text-xl"></i>
            </div>
            Order Details
          </h1>
          <p class="mt-1 text-sm text-gray-500">Manage and track order information</p>
        </div>
        
        <div class="flex items-center gap-3">
          <a href="/admin/orders" 
             class="inline-flex items-center gap-2 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-all duration-200 text-sm font-medium focus:outline-none focus:ring-2 focus:ring-gray-200">
            <i class="ri-arrow-left-line text-sm"></i>
            Back to Orders
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="px-4 sm:px-6 lg:px-8 pb-8">
    <div class="max-w-4xl mx-auto space-y-6">
      
      <!-- Order Summary Card -->
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
          <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
            <div>
              <h2 class="text-lg font-semibold text-gray-900">Order #<%= order.orderId %></h2>
              <p class="text-sm text-gray-500">Placed on <%= new Date(order.createdAt).toLocaleString() %></p>
            </div>
            <span class="inline-flex items-center gap-1.5 px-4 py-2 rounded-full text-sm font-medium
              <% if (order.status === 'Placed') { %> bg-blue-100 text-blue-800 border border-blue-200
              <% } else if (order.status === 'Shipped') { %> bg-indigo-100 text-indigo-800 border border-indigo-200
              <% } else if (order.status === 'Out for Delivery') { %> bg-purple-100 text-purple-800 border border-purple-200
              <% } else if (order.status === 'Delivered') { %> bg-green-100 text-green-800 border border-green-200
              <% } else if (order.status === 'Failed') { %> bg-gray-100 text-gray-800 border border-gray-200
              <% } else if (order.status === 'Cancelled') { %> bg-red-100 text-red-800 border border-red-200
              <% } else if (order.status === 'Returned') { %> bg-orange-100 text-orange-800 border border-orange-200 <% } %>">
              <div class="w-2 h-2 rounded-full
                <% if (order.status === 'Placed') { %> bg-blue-500
                <% } else if (order.status === 'Shipped') { %> bg-indigo-500
                <% } else if (order.status === 'Out for Delivery') { %> bg-purple-500
                <% } else if (order.status === 'Delivered') { %> bg-green-500
                <% } else if (order.status === 'Failed') { %> bg-gray-500
                <% } else if (order.status === 'Cancelled') { %> bg-red-500
                <% } else if (order.status === 'Returned') { %> bg-orange-500 <% } %>"></div>
              <%= order.status %>
            </span>
          </div>
        </div>
        
        <div class="p-6">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div class="space-y-1">
              <p class="text-sm font-medium text-gray-500">Payment Method</p>
              <p class="text-sm text-gray-900 flex items-center gap-2">
                <i class="ri-bank-card-line text-primary"></i>
                <%= order.paymentMethod %>
              </p>
            </div>
            <div class="space-y-1">
              <p class="text-sm font-medium text-gray-500">Total Amount</p>
              <p class="text-lg font-bold text-gray-900">₹<%= order.totalAmount.toFixed(2) %></p>
            </div>
            <div class="space-y-1">
              <p class="text-sm font-medium text-gray-500">Order Date</p>
              <p class="text-sm text-gray-900"><%= new Date(order.createdAt).toLocaleDateString() %></p>
            </div>
              <% 
                  let originalTotal = 0;
                  let discountedTotal = 0;

                  order.items.forEach(item => {
                    originalTotal += item.originalPrice * item.quantity;
                    discountedTotal += item.discountedPrice * item.quantity;
                  });

                  let offerDiscount = originalTotal - discountedTotal;
                  let couponDiscount = order.discountAmount - offerDiscount;
                %>
               <% if (order.couponApplied) { %>
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Coupon Discount</span>
                  <span class="font-medium text-green-600">-₹<%=couponDiscount.toFixed(2) %></span>
                </div>
              <% } %>
              
              <% if (order.productDiscount && order.productDiscount > 0) { %>
                <div class="flex justify-between text-sm">
                  <span class="text-gray-600">Offer Discount</span>
                  <span class="font-medium text-green-600">-₹<%= order.productDiscount.toFixed(2) %></span>
                </div>
              <% } %>
          </div>
        </div>
      </div>

      <!-- Shipping Address Card -->
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
          <h3 class="text-lg font-semibold text-gray-900 flex items-center gap-2">
            <i class="ri-map-pin-line text-primary"></i>
            Shipping Address
          </h3>
        </div>
        <div class="p-6">
          <div class="bg-gray-50 rounded-lg p-4">
            <div class="space-y-2">
              <p class="font-medium text-gray-900"><%= order.address.name %></p>
              <p class="text-sm text-gray-600">
                <%= order.address.city %>, <%= order.address.state %> - <%= order.address.pincode %>
              </p>
              <p class="text-sm text-gray-600">
                <span class="font-medium">Landmark:</span> <%= order.address.landmark %>
              </p>
              <div class="flex flex-col sm:flex-row gap-2 pt-2">
                <p class="text-sm text-gray-600 flex items-center gap-1">
                  <i class="ri-phone-line text-primary"></i>
                  <%= order.address.phone %>
                </p>
                <p class="text-sm text-gray-600 flex items-center gap-1">
                  <i class="ri-phone-line text-primary"></i>
                  Alt: <%= order.address.altPhone %>
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- Products Card -->
      <%
      const discountTotal = order.items.reduce((sum, item) => sum + item.discountedPrice * item.quantity, 0);
      
      const couponAdjustedPrices = {};
      order.items.forEach(item => {
        const itemId = item._id;
        const itemTotal = item.discountedPrice * item.quantity;
        const couponShare = (itemTotal / discountTotal) * couponDiscount;
        const finalPrice = itemTotal - couponShare;
        couponAdjustedPrices[itemId] = finalPrice.toFixed(2);
      });
    %>
    <div class="bg-white shadow-custom rounded-lg overflow-hidden md:col-span-2">
      <div class="p-5 border-b border-gray-100">
        <h3 class="text-md font-semibold text-gray-900 flex items-center">
          <i class="fas fa-shopping-bag text-primary mr-2"></i>
          Ordered Items (<%= order.items.length %>)
        </h3>
      </div>
      <div class="divide-y divide-gray-100">
        <% order.items.forEach(item => { %>
          <div class="p-5 flex flex-col sm:flex-row">
            <div class="flex-shrink-0 mb-4 sm:mb-0 sm:mr-4">
              <img
                src="/uploads/product-images/<%= item.product.productImage[0] %>"
                class="w-20 h-20 object-cover rounded-lg border border-gray-200"
                alt="<%= item.product.name %>"
              />
            </div>
            <div class="flex-grow">
              <h4 class="font-medium text-gray-900 mb-1"><%= item.product.name %></h4>
              <div class="grid grid-cols-2 gap-2 text-sm text-gray-600">
                <div>
                  Quantity: <span class="font-medium"><%= item.quantity %></span>
                  <p class="text-xs text-gray-400">Unit Price: ₹<%= item.product.discountedPrice.toFixed(2) %></p>
                </div>
                <div>
                  Price: 
                  <span class="font-medium">₹<%= couponAdjustedPrices[item._id] %></span>
                </div>
              </div>
                <div class="mt-3 text-sm">
                  <%
                    const itemStatusColors = {
                      'Placed': 'text-yellow-600',
                      'Shipped': 'text-blue-600',
                      'Out for Delivery': 'text-indigo-600',
                      'Delivered': 'text-green-600',
                      'Cancelled': 'text-red-600',
                      'Returned': 'text-orange-600'
                    };
                    const itemStatusClass = itemStatusColors[item.status] || 'text-gray-600';
                  %>
                  <span class="<%= itemStatusClass %> font-medium">
                    <i class="fas fa-circle text-xs mr-1"></i>
                    <%= item.status %>
                  </span>
                </div>
            </div>
          </div>
        <% }) %>
      </div>
    </div>

      <!-- Status Update Card -->
      <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
          <h3 class="text-lg font-semibold text-gray-900 flex items-center gap-2">
            <i class="ri-settings-line text-primary"></i>
            Order Management
          </h3>
        </div>
        <div class="p-6">
          <div class="space-y-4">
            <div>
              <label for="status" class="block text-sm font-medium text-gray-700 mb-2">
                Update Order Status
              </label>
              <select id="status" name="status" 
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary/30 focus:border-primary transition-all"
                <%= ['Delivered', 'Cancelled', 'Returned', 'Failed'].includes(order.status) ? 'disabled' : '' %>>
                <option value="Placed" <%= order.status === 'Placed' ? 'selected' : '' %>>Placed</option>
                <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                <option value="Out for Delivery" <%= order.status === 'Out for Delivery' ? 'selected' : '' %>>Out for Delivery</option>
                <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                <option value="Returned" <%= order.status === 'Returned' ? 'selected' : '' %>>Returned</option>
              </select>
            </div>

            <button id="updateStatusBtn" 
              class="w-full bg-primary text-white py-3 rounded-lg hover:bg-primary-hover transition-all duration-200 font-medium shadow-sm hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary/30 flex items-center justify-center gap-2
              <%= ['Delivered', 'Cancelled', 'Returned', 'Failed'].includes(order.status) ? 'opacity-50 cursor-not-allowed' : '' %>"
              <%= ['Delivered', 'Cancelled', 'Returned', 'Failed'].includes(order.status) ? 'disabled' : '' %>>
              <i class="ri-refresh-line text-sm"></i>
              Update Order Status
            </button>

            <% if (order.isReturnRequested && order.status === 'Delivered') { %>
              <div class="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                <div class="flex items-center gap-2 mb-3">
                  <i class="ri-alert-line text-yellow-600"></i>
                  <h4 class="font-medium text-yellow-800">Return Request Pending</h4>
                </div>
                <p class="text-sm text-yellow-700 mb-4">This order has a pending return request that requires your attention.</p>
                <div class="flex flex-col sm:flex-row gap-3">
                  <form method="POST" action="/admin/orders/<%= order._id %>/approve-return" class="flex-1">
                    <button type="submit" 
                      class="w-full bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-all duration-200 font-medium flex items-center justify-center gap-2">
                      <i class="ri-check-line text-sm"></i>
                      Approve Return
                    </button>
                  </form>
                  <form method="POST" action="/admin/orders/<%= order._id %>/reject-return" class="flex-1">
                    <button type="submit" 
                      class="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-all duration-200 font-medium flex items-center justify-center gap-2">
                      <i class="ri-close-line text-sm"></i>
                      Reject Return
                    </button>
                  </form>
                </div>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<% if (statusUpdated) { %>
  <script>
    Swal.fire({
      toast: true,
      icon: 'success',
      title: 'Order status updated successfully',
      position: 'top-end',
      showConfirmButton: false,
      timer: 2000,
      timerProgressBar: true
    });
  </script>
<% } %>

<% if (returnStatus === 'approved') { %>
  <script>
    Swal.fire({
      toast: true,
      icon: 'success',
      title: 'Return approved and refunded to wallet!',
      position: 'top-end',
      timer: 2000,
      showConfirmButton: false,
    });
  </script>
<% } else if (returnStatus === 'rejected') { %>
  <script>
    Swal.fire({
      toast: true,
      icon: 'info',
      title: 'Return request rejected.',
      position: 'top-end',
      timer: 2000,
      showConfirmButton: false
    });
  </script>
<% } %>

<script>
  document.getElementById('updateStatusBtn')?.addEventListener('click', async () => {
    const status = document.getElementById('status').value;
    const orderId = "<%= order._id %>";

    try {
      const response = await fetch(`/admin/orders/${orderId}/status`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ status })
      });

      if (!response.ok) {
        const { message } = await response.json();
        throw new Error(message || 'Something went wrong');
      }

      Swal.fire({
        toast: true,
        icon: 'success',
        title: 'Order status updated successfully',
        position: 'top-end',
        timer: 2000,
        showConfirmButton: false
      }).then(() => {
        window.location.reload();
      });

    } catch (err) {
      Swal.fire({
        toast: true,
        icon: 'error',
        title: err.message,
        position: 'top-end',
        timer: 2000,
        showConfirmButton: false
      });
    }
  });
</script>