
<div class="max-w-6xl mx-auto px-6 py-8">
  <h1 class="text-2xl font-bold text-primary mb-6">Order Details</h1>

  <!-- Basic Order Info -->
  <div class="bg-white rounded-lg shadow p-6 space-y-4">
    <div class="flex justify-between">
      <h2 class="text-lg font-semibold text-gray-800">Order ID: <%= order.orderId %></h2>
      <span class="px-3 py-1 rounded-full text-white 
        <% if (order.status === 'Placed') { %> bg-yellow-300 <% } 
          else if (order.status === 'Shipped') { %> bg-blue-400 <% } 
          else if (order.status === 'Out for Delivery') { %> bg-green-600 <% } 
          else if (order.status === 'Delivered') { %> bg-lime-400 <% }
          else if (order.status === 'Failed') { %> bg-gray-400 <% } 
          else if (order.status === 'Cancelled') { %> bg-red-500 <% } 
          else if (order.status === 'Returned') { %> bg-orange-500 <% } %>">
        <%= order.status %>
      </span>
    </div>

    <p class="text-gray-600 text-sm">
      Placed on: <%= new Date(order.createdAt).toLocaleString() %><br>
      Payment Method: <%= order.paymentMethod %><br>
      Total Amount: ₹<%= order.totalAmount.toFixed(2) %>
    </p>

    <!-- Address Section -->
    <div>
      <h3 class="text-md font-semibold text-primary mb-2">Shipping Address</h3>
      <p class="text-gray-700 text-sm">
        <%= order.address.name %>, <%= order.address.city %>, <%= order.address.state %> - <%= order.address.pincode %><br>
        Landmark: <%= order.address.landmark %><br>
         <%= order.address.phone %> | Alt: <%= order.address.altPhone %>
      </p>
    </div>

    <!-- Products Ordered -->
    <div>
      <h3 class="text-md font-semibold text-primary mb-2">Products</h3>
      <ul class="space-y-4">
        <% order.items.forEach(item => { %>
          <li class="flex items-center justify-between bg-gray-50 p-3 rounded-md">
            <div class="flex items-center gap-3">
              <img src="/uploads/product-images/<%= item.product.productImage[0] %>" class="w-16 h-16 object-cover rounded" alt="<%= item.product.name %>">
              <div>
                <p class="font-medium"><%= item.product.name %></p>
                <p class="text-sm text-gray-600">Qty: <%= item.quantity %></p>
              </div>
            </div>
            <div class="text-sm font-semibold">
              ₹<%= (item.product.price * item.quantity).toFixed(2) %>
            </div>
          </li>
        <% }) %>
      </ul>
    </div>

    <!-- Status Update -->
    <div class="pt-6">
      <!-- Status Update (AJAX) -->
<div class="pt-6">
    <label for="status" class="block text-sm font-semibold text-gray-700">Change Order Status</label>

    <select id="status" name="status" 
      class="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-primary focus:border-primary"
      <%= ['Delivered', 'Cancelled', 'Returned', 'Failed'].includes(order.status) ? 'disabled' : '' %>>
      <option value="Placed" <%= order.status === 'Placed' ? 'selected' : '' %>>Placed</option>
      <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
      <option value="Out for Delivery" <%= order.status === 'Out for Delivery' ? 'selected' : '' %>>Out for Delivery</option>
      <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
      <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
      <option value="Returned" <%= order.status === 'Returned' ? 'selected' : '' %>>Returned</option>
    </select>

    <button id="updateStatusBtn" 
      class="mt-3 w-full bg-[#007D8B] text-white py-2 rounded-md hover:bg-primary-dark transition"
      <%= ['Delivered', 'Cancelled', 'Returned', 'Failed'].includes(order.status) ? 'disabled' : '' %>>
      Update Status
    </button>
</div>


      <% if (order.isReturnRequested && order.status === 'Delivered') { %>
          <div class="mt-4 flex gap-4">
            <form method="POST" action="/admin/orders/<%= order._id %>/approve-return">
              <button type="submit" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition">
                Approve Return
              </button>
            </form>
        
            <form method="POST" action="/admin/orders/<%= order._id %>/reject-return">
              <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition">
                Reject Return
              </button>
            </form>
          </div>
        <% } %>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<% if (statusUpdated) { %>
    <script>
      Swal.fire({
        toast: true,
        icon: 'success',
        title: 'Order status updated successfully',
        position: 'top-end',
        showConfirmButton: false,
        timer: 2000,
        timerProgressBar: true
      });
    </script>
  <% } %>

  <% if (returnStatus === 'approved') { %>
    <script>
      Swal.fire({
        toast: true,
        icon: 'success',
        title: 'Return approved and refunded to wallet!',
        position: 'top-end',
        timer: 2000,
        showConfirmButton: false,

      });
    </script>
  <% } else if (returnStatus === 'rejected') { %>
    <script>
      Swal.fire({
        toast: true,
        icon: 'info',
        title: 'Return request rejected.',
        position: 'top-end',
        timer: 2000,
        showConfirmButton: false
      });
    </script>
  <% } %>
  <script>
  document.getElementById('updateStatusBtn')?.addEventListener('click', async () => {
    const status = document.getElementById('status').value;
    const orderId = "<%= order._id %>";

    try {
      const response = await fetch(`/admin/orders/${orderId}/status`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ status })
      });

      if (!response.ok) {
        const { message } = await response.json();
        throw new Error(message || 'Something went wrong');
      }

      Swal.fire({
        toast: true,
        icon: 'success',
        title: 'Order status updated successfully',
        position: 'top-end',
        timer: 2000,
        showConfirmButton: false
      });

    } catch (err) {
      Swal.fire({
        toast: true,
        icon: 'error',
        title: err.message,
        position: 'top-end',
        timer: 2000,
        showConfirmButton: false
      });
    }
  });
</script>

  
  


